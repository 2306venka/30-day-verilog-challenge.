 Day 26 â€“ 4-bit Arithmetic Logic Unit (ALU)

On **Day 26**, I implemented a **4-bit ALU** in Verilog.  
This is one of the **core digital circuits** used in CPUs and processors.

Supported Operations:
- `000` â†’ Addition  
- `001` â†’ Subtraction  
- `010` â†’ AND  
- `011` â†’ OR  
- `100` â†’ XOR  
- `101` â†’ NOT  
- `110` â†’ Shift Left  
- `111` â†’ Shift Right  


- `design.sv` â€“ RTL for ALU  
- `testbench.sv` â€“ Testbench with multiple operations  
- `alu_4bit.vcd` â€“ Waveform dump  

## âš¡ Simulation Flow
1. Add `0101 + 0011 = 1000`  
2. Subtract `0101 - 0011 = 0010`  
3. AND, OR, XOR operations verified  
4. NOT applied on A  
5. Shift Left & Shift Right on A  

## ðŸ“Š Waveform
- Shows correct **result** for each operation  
- **Carry flag** active during addition overflow  
- **Zero flag** asserted when result is `0000`  

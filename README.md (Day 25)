# Day 25 â€“ Universal 4-bit Shift Register

## ðŸ“˜ Overview
On **Day 25**, I implemented a **Universal Shift Register** in Verilog.  
It combines **SISO, SIPO, PISO, and PIPO** into one design using a 2-bit control input.

### Modes:
- `00` â†’ Hold (no change)  
- `01` â†’ Shift Right  
- `10` â†’ Shift Left  
- `11` â†’ Parallel Load  

## ðŸ“‚ Files
- `design.sv` â€“ RTL for universal shift register  
- `testbench.sv` â€“ Testbench with all 4 operations  
- `universal_shift_register.vcd` â€“ Waveform dump  

## âš¡ Simulation Flow
1. Load parallel data `1010`  
2. Hold the data  
3. Shift right â†’ bits move towards LSB  
4. Shift left â†’ bits move towards MSB  
5. Load new parallel value `1101`  
6. Hold again  

## ðŸ“Š Waveform
- Shows **parallel load** instantly  
- Clear **shift left** and **shift right** operations  
- Validates versatility of the register  
